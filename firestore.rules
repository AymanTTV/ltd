// firestore.rules
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isManager() {
      return isAuthenticated() &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'manager';
    }

    match /customers/{customerId} {
      allow get, list: if true;
      allow create, update, delete: if isAuthenticated();
    }

    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() || request.auth.uid == userId;
    }

    match /vehicles/{vehicleId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() || isManager();
    }

    match /maintenanceLogs/{logId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() || isManager();
    }

    match /rentals/{rentalId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() || isManager();
    }

    match /mileageHistory/{historyId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() || isManager();
    }

    match /todos/{userId}/items/{itemId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
      allow read: if isAuthenticated() && isManager();
    }
  }
}
